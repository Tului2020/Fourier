{"ast":null,"code":"var _jsxFileName = \"/home/tului/Desktop/Fourier/src/calculator/calculator.js\";\nimport React from 'react';\nimport './calculator.css';\nimport Algebrite from 'algebrite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      equation: 'x',\n      limi: 5,\n      result: ''\n    };\n    this.updateEquation = this.updateEquation.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"result\",\n        children: \"No Equation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.equation,\n        className: \"equations\",\n        id: \"equation\",\n        onChange: this.updateState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"limits\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"lower-limit\",\n          children: [\"Lower Limit \", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.lowerLimit,\n            className: \"equation\",\n            id: \"lowerLimit\",\n            onChange: this.updateState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.updateEquation,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  updateState(event) {\n    let stateToChange = event.target.id;\n    let newValue = event.target.value;\n    this.setState({\n      [stateToChange]: newValue\n    });\n  }\n\n  updateEquation() {\n    let {\n      equation,\n      limit\n    } = this.state;\n    let resultElement = document.getElementById('result');\n\n    if (!equation) {\n      resultElement.innerHTML = 'No Equation';\n    } else {\n      resultElement.innerHTML = Algebrite.run(equation); // Algebrite.defint(Algebrite.run(equation), 'x', lowerLimit, upperLimit)\n    }\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/home/tului/Desktop/Fourier/src/calculator/calculator.js"],"names":["React","Algebrite","Calculator","Component","constructor","props","state","equation","limi","result","updateEquation","bind","updateState","render","lowerLimit","event","stateToChange","target","id","newValue","value","setState","limit","resultElement","document","getElementById","innerHTML","run"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAIA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,IAAI,EAAE,CAAvB;AAA0BC,MAAAA,MAAM,EAAE;AAAlC,KAAb;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,QAAzB;AAAmC,QAAA,SAAS,EAAC,WAA7C;AAAyD,QAAA,EAAE,EAAC,UAA5D;AAAuE,QAAA,QAAQ,EAAE,KAAKK;AAAtF;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAK,UAAA,EAAE,EAAC,aAAR;AAAA,kDACc;AAAO,YAAA,KAAK,EAAE,KAAKN,KAAL,CAAWQ,UAAzB;AAAqC,YAAA,SAAS,EAAC,UAA/C;AAA0D,YAAA,EAAE,EAAC,YAA7D;AAA0E,YAAA,QAAQ,EAAE,KAAKF;AAAzF;AAAA;AAAA;AAAA;AAAA,kBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAQE;AAAQ,QAAA,OAAO,EAAE,KAAKF,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAEDE,EAAAA,WAAW,CAACG,KAAD,EAAQ;AACjB,QAAIC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAAjC;AACA,QAAIC,QAAQ,GAAGJ,KAAK,CAACE,MAAN,CAAaG,KAA5B;AACA,SAAKC,QAAL,CAAc;AAAC,OAACL,aAAD,GAAiBG;AAAlB,KAAd;AACD;;AAGDT,EAAAA,cAAc,GAAG;AACf,QAAI;AAAEH,MAAAA,QAAF;AAAYe,MAAAA;AAAZ,QAAsB,KAAKhB,KAA/B;AACA,QAAIiB,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAApB;;AAEA,QAAI,CAAClB,QAAL,EAAe;AACbgB,MAAAA,aAAa,CAACG,SAAd,GAA0B,aAA1B;AACD,KAFD,MAEO;AACLH,MAAAA,aAAa,CAACG,SAAd,GAA0BzB,SAAS,CAAC0B,GAAV,CAAcpB,QAAd,CAA1B,CADK,CAEL;AACD;AACF;;AAxCsC;;AAgDzC,eAAeL,UAAf","sourcesContent":["import React from 'react'\nimport './calculator.css';\nimport Algebrite from 'algebrite'\n\n\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { equation: 'x', limi: 5, result: '' }\n    this.updateEquation = this.updateEquation.bind(this)\n    this.updateState = this.updateState.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <div id='result'>No Equation</div>\n        <input value={this.state.equation} className='equations' id='equation' onChange={this.updateState}/>\n        <div className='limits'>\n          <div id='lower-limit'>\n            Lower Limit <input value={this.state.lowerLimit} className='equation' id='lowerLimit' onChange={this.updateState}/>\n          </div>\n        </div>\n        <button onClick={this.updateEquation}>Update</button>\n      </div>\n    )\n  }\n\n  updateState(event) {\n    let stateToChange = event.target.id\n    let newValue = event.target.value\n    this.setState({[stateToChange]: newValue})\n  }\n\n\n  updateEquation() {\n    let { equation, limit } = this.state\n    let resultElement = document.getElementById('result')\n\n    if (!equation) {\n      resultElement.innerHTML = 'No Equation'\n    } else {\n      resultElement.innerHTML = Algebrite.run(equation)\n      // Algebrite.defint(Algebrite.run(equation), 'x', lowerLimit, upperLimit)\n    }\n  }\n\n\n\n\n\n}\n\nexport default Calculator;\n\n\n"]},"metadata":{},"sourceType":"module"}