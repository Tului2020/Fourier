[{"/home/tului/Desktop/Fourier/src/index.js":"1","/home/tului/Desktop/Fourier/src/App.js":"2","/home/tului/Desktop/Fourier/src/calculator/calculator.js":"3"},{"size":221,"mtime":1617389913460,"results":"4","hashOfConfig":"5"},{"size":177,"mtime":1617390864193,"results":"6","hashOfConfig":"5"},{"size":2190,"mtime":1617395582918,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1a1aghd",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/home/tului/Desktop/Fourier/src/index.js",[],["16","17"],"/home/tului/Desktop/Fourier/src/App.js",[],"/home/tului/Desktop/Fourier/src/calculator/calculator.js",["18","19","20"],"import React from 'react'\nimport './calculator.css';\nimport Algebrite from 'algebrite'\n\n\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { equation: 'x', limit: 5, n: 4}\n    this.updateEquation = this.updateEquation.bind(this)\n    this.updateState = this.updateState.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <div id='equation-confirmation'>No Equation</div>\n        <input value={this.state.equation} className='equations' id='equation' onChange={this.updateState}/>\n        <div className='limits'>\n        <div id='lower-limit'>\n            Limit <input value={this.state.limit} className='equation' id='limit' onChange={this.updateState}/>\n          </div>\n          <div id='lower-limit'>\n            N <input value={this.state.n} className='equation' id='n' onChange={this.updateState}/>\n          </div>\n        </div>\n        <button onClick={this.updateEquation}>Update</button>\n        <div id='result'></div>\n      </div>\n    )\n  }\n\n  updateState(event) {\n    let stateToChange = event.target.id\n    let newValue = event.target.value\n    this.setState({[stateToChange]: newValue})\n  }\n\n\n  updateEquation() {\n    let { equation, limit, n } = this.state\n    let resultElement = document.getElementById('equation-confirmation')\n\n    if (!equation) {\n      resultElement.innerHTML = 'No Equation'\n    } else {\n      resultElement.innerHTML = Algebrite.run(equation)\n      // Algebrite.defint(Algebrite.run(equation), 'x', lowerLimit, upperLimit)\n    }\n\n    let constA = [];\n    let constB = [];\n\n    for (let i = 0; i < n; i ++) {\n      \n    }\n\n\n\n    // this.updateResult(['dsadas'], ['dasda'])\n  }\n\n  updateResult(a, b) {\n\n    let resultElement = document.getElementById('result')\n    while (resultElement.firstChild) {\n      resultElement.firstChild.remove()\n    }\n\n\n    a.forEach(el => {\n      let divComp = document.createElement('div')\n      divComp.innerHTML = el\n      resultElement.appendChild(divComp)\n    })\n\n    b.forEach(el => {\n      let divComp = document.createElement('div')\n      divComp.innerHTML = el\n      resultElement.appendChild(divComp)\n    })\n\n  }\n\n\n\n\n\n}\n\nexport default Calculator;\n\n\n",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":42,"column":21,"nodeType":"27","messageId":"28","endLine":42,"endColumn":26},{"ruleId":"25","severity":1,"message":"29","line":52,"column":9,"nodeType":"27","messageId":"28","endLine":52,"endColumn":15},{"ruleId":"25","severity":1,"message":"30","line":53,"column":9,"nodeType":"27","messageId":"28","endLine":53,"endColumn":15},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'limit' is assigned a value but never used.","Identifier","unusedVar","'constA' is assigned a value but never used.","'constB' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]